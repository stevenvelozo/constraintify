{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/Constraintify-Browser-Shim.js","constraintify.min.js","source/Constraintify-Log.js","source/Constraintify.js"],"names":["let"],"mappings":"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","file":"constraintify.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Constraintify browser shim loader\n*/\n\n// Load the constraintify module into the browser global automatically.\nvar libConstraintify = require('./Constraintify.js');\n\nif (typeof(window) === 'object')\n    window.Constraintify = libConstraintify;\n\nmodule.exports = libConstraintify;","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Constraintify browser shim loader\n*/\n\n// Load the constraintify module into the browser global automatically.\nvar libConstraintify = require('./Constraintify.js');\n\nif (typeof(window) === 'object')\n    window.Constraintify = libConstraintify;\n\nmodule.exports = libConstraintify;\n},{\"./Constraintify.js\":3}],2:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Constraintify Logging\n*\n* @class ConstraintifyLog\n*/\n\nclass ConstraintifyLog\n{\n\tconstructor(pSettings)\n\t{\n\t\tthis._Settings = pSettings;\n\t}\n\n\twriteConsole(pLevel, pMessage, pObject)\n\t{\n\t\t// Write the message\n\t\tconsole.log('['+pLevel+'] '+pMessage);\n\n\t\t// Write out the object if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 4));\n\t\t}\n\t}\n\n\ttrace(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('TRACE', pMessage, pObject);\n\t}\n\n\tdebug(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('DEBUG', pMessage, pObject);\n\t}\n\n\tinfo(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('INFO', pMessage, pObject);\n\t}\n\n\twarning(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('WARNING', pMessage, pObject);\n\t}\n\n\terror(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('ERROR', pMessage, pObject);\n\t}\n\n\n\t// Log the current date and time, well formatted (with Moment-Timezone)\n\tlogTime(pMessage)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpDate = new Date();\n\n\t\tthis.info(tmpMessage+': '+tmpDate.toString())\n\t}\n\n\t// Get a timestamp \n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeStamp, pMessage)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\t\tlet tmpOperationTime = tmpEndTime-pTimeStamp;\n\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t}\n\n}\n\nmodule.exports = ConstraintifyLog;\n},{}],3:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Constraintify Graph Traversal Library\n*\n* @class Constraintify\n*/\nclass Constraintify\n{\n\tconstructor(pSettings)\n\t{\n\t\tthis._Dependencies = {};\n\n\t\tthis._Settings = (typeof(pSettings) === 'object') ? pSettings : (\n\t\t\t{\n\t\t\t\t// If this is true, show a whole lotta logs\n\t\t\t\tDebugLog: true,\n\t\t\t\tDebugLogNoisy: false\n\t\t\t});\n\n\t\t// This has behaviors similar to bunyan, for consistency\n\t\tthis.log = new (require('./Constraintify-Log.js'))(this._Settings);\n\n\t\tthis.Sets = {};\n\t}\n\n\taddSet(pSetName)\n\t{\n\t\tif (this.Sets.hasOwnProperty(pSetName))\n\t\t{\n\t\t\tif (this._Settings.DebugLogNoisy) this.log.warning('Attempted to add set ['+pSetName+'] but it already exists.');\n\t\t\treturn false;\n\t\t}\n\t\tif (this._Settings.DebugLog) this.log.info('Adding set ['+pSetName+'].');\n\n\t\tthis.Sets[pSetName] = {};\n\t\treturn true;\n\t}\n\n\taddSetValue(pSetName, pValue)\n\t{\n\t\tif(!this.Sets.hasOwnProperty(pSetName))\n\t\t{\n\t\t\tif (this._Settings.DebugLog) this.log.warning('Attempted to add value ['+pValue+'] to set ['+pSetName+'] but set does not exist.  Adding set now.');\n\t\t\tthis.addSet(pSetName);\n\t\t}\n\n\t\tif (this.Sets[pSetName].hasOwnProperty(pValue))\n\t\t{\n\t\t\tif (this._Settings.DebugLogNoisy) this.log.warning('Attempted to add DUPLICATE value ['+pValue+'] to set ['+pSetName+'] but value is already in set.');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._Settings.DebugLog) this.log.info('Adding value ['+pValue+'] to set ['+pSetName+'].');\n\t\tthis.Sets[pSetName][pValue] = {};\n\t}\n\n\taddSetConnection(pSetName, pValue, pConnectedSet)\n\t{\n\t\tthis.addSetValue(pSetName, pValue);\n\n\t\tif (this.Sets[pSetName][pValue].hasOwnProperty(pConnectedSet))\n\t\t{\n\t\t\tif (this._Settings.DebugLogNoisy) this.log.info('Set ['+pSetName+']->['+pValue+'] already connected to set ['+pConnectedSet+'].');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._Settings.DebugLog) this.log.info('Connecting Set ['+pSetName+']->['+pValue+'] to set ['+pConnectedSet+'].');\n\t\tthis.Sets[pSetName][pValue][pConnectedSet] = {};\n\t}\n\n\tconnectSetValue(pLeftSetName, pLeftValue, pRightSetName, pRightValue)\n\t{\n\t\tthis.addSet(pLeftSetName);\n\t\tthis.addSet(pRightSetName);\n\t\tthis.addSetValue(pLeftSetName, pLeftValue);\n\t\tthis.addSetValue(pRightSetName, pRightValue);\n\t\tthis.addSetConnection(pLeftSetName, pLeftValue, pRightSetName);\n\n\t\tthis.Sets[pLeftSetName][pLeftValue][pRightSetName][pRightValue] = true;\n\t}\n\n\taddSetValueConnection(pLeftSetName, pLeftValue, pRightSetName, pRightValue)\n\t{\n\t\tthis.addSet(pLeftSetName);\n\t\tthis.addSet(pRightSetName);\n\n\t\tthis.addSetValue(pLeftSetName, pLeftValue);\n\t\tthis.addSetValue(pRightSetName, pRightValue);\n\n\t\tthis.connectSetValue(pLeftSetName, pLeftValue, pRightSetName, pRightValue);\n\t}\n\n\taddSetValueConnectionBidirectional(pLeftSetName, pLeftValue, pRightSetName, pRightValue)\n\t{\n\t\tthis.addSetValueConnection(pLeftSetName, pLeftValue, pRightSetName, pRightValue);\n\t\tthis.addSetValueConnection(pRightSetName, pRightValue, pLeftSetName, pLeftValue);\n\t}\n\n\tgetSetValues(pLeftSetName)\n\t{\n\t\t// If the set doesn't exist, return empty\n\t\tif (!this.Sets.hasOwnProperty(pLeftSetName))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.keys(this.Sets[pLeftSetName]);\n\t}\n\n\tgetSetConnectedValues(pLeftSetName, pLeftValue, pRightSetName)\n\t{\n\t\t// If the set doesn't exist, return empty\n\t\tif (!this.Sets.hasOwnProperty(pLeftSetName))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\t// If this value isn't in the set return empty.\n\t\tif (!this.Sets[pLeftSetName].hasOwnProperty(pLeftValue))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\t// If this value isn't connected to the right set return empty.\n\t\tif (!this.Sets[pLeftSetName][pLeftValue].hasOwnProperty(pRightSetName))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.keys(this.Sets[pLeftSetName][pLeftValue][pRightSetName]);\n\t}\n\n\tcheckSetValue(pLeftSetName, pLeftValue)\n\t{\n\t\tif (!this.Sets.hasOwnProperty(pLeftSetName))\n\t\t\treturn false;\n\t\treturn this.Sets[pLeftSetName].hasOwnProperty(pLeftValue);\n\t}\n\n\tcheckSetConnectedValue(pLeftSetName, pLeftValue, pRightSetName, pRightSetValue)\n\t{\n\t\t// If the set doesn't exist, return false\n\t\tif (!this.Sets.hasOwnProperty(pLeftSetName))\n\t\t\treturn false;\n\t\t// If this value isn't in the set return false.\n\t\tif (!this.Sets[pLeftSetName].hasOwnProperty(pLeftValue))\n\t\t\treturn false;\n\t\t// If this value isn't connected to the right set return false.\n\t\tif (!this.Sets[pLeftSetName][pLeftValue].hasOwnProperty(pRightSetName))\n\t\t\treturn false;\n\t\treturn this.Sets[pLeftSetName][pLeftValue][pRightSetName].hasOwnProperty(pRightSetValue);\n\t}\n};\n\nmodule.exports = Constraintify;\n},{\"./Constraintify-Log.js\":2}]},{},[1])\n\n","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Constraintify Logging\n*\n* @class ConstraintifyLog\n*/\n\nclass ConstraintifyLog\n{\n\tconstructor(pSettings)\n\t{\n\t\tthis._Settings = pSettings;\n\t}\n\n\twriteConsole(pLevel, pMessage, pObject)\n\t{\n\t\t// Write the message\n\t\tconsole.log('['+pLevel+'] '+pMessage);\n\n\t\t// Write out the object if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 4));\n\t\t}\n\t}\n\n\ttrace(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('TRACE', pMessage, pObject);\n\t}\n\n\tdebug(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('DEBUG', pMessage, pObject);\n\t}\n\n\tinfo(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('INFO', pMessage, pObject);\n\t}\n\n\twarning(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('WARNING', pMessage, pObject);\n\t}\n\n\terror(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('ERROR', pMessage, pObject);\n\t}\n\n\n\t// Log the current date and time, well formatted (with Moment-Timezone)\n\tlogTime(pMessage)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpDate = new Date();\n\n\t\tthis.info(tmpMessage+': '+tmpDate.toString())\n\t}\n\n\t// Get a timestamp \n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeStamp, pMessage)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\t\tlet tmpOperationTime = tmpEndTime-pTimeStamp;\n\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t}\n\n}\n\nmodule.exports = ConstraintifyLog;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Constraintify Graph Traversal Library\n*\n* @class Constraintify\n*/\nclass Constraintify\n{\n\tconstructor(pSettings)\n\t{\n\t\tthis._Dependencies = {};\n\n\t\tthis._Settings = (typeof(pSettings) === 'object') ? pSettings : (\n\t\t\t{\n\t\t\t\t// If this is true, show a whole lotta logs\n\t\t\t\tDebugLog: true,\n\t\t\t\tDebugLogNoisy: false\n\t\t\t});\n\n\t\t// This has behaviors similar to bunyan, for consistency\n\t\tthis.log = new (require('./Constraintify-Log.js'))(this._Settings);\n\n\t\tthis.Sets = {};\n\t}\n\n\taddSet(pSetName)\n\t{\n\t\tif (this.Sets.hasOwnProperty(pSetName))\n\t\t{\n\t\t\tif (this._Settings.DebugLogNoisy) this.log.warning('Attempted to add set ['+pSetName+'] but it already exists.');\n\t\t\treturn false;\n\t\t}\n\t\tif (this._Settings.DebugLog) this.log.info('Adding set ['+pSetName+'].');\n\n\t\tthis.Sets[pSetName] = {};\n\t\treturn true;\n\t}\n\n\taddSetValue(pSetName, pValue)\n\t{\n\t\tif(!this.Sets.hasOwnProperty(pSetName))\n\t\t{\n\t\t\tif (this._Settings.DebugLog) this.log.warning('Attempted to add value ['+pValue+'] to set ['+pSetName+'] but set does not exist.  Adding set now.');\n\t\t\tthis.addSet(pSetName);\n\t\t}\n\n\t\tif (this.Sets[pSetName].hasOwnProperty(pValue))\n\t\t{\n\t\t\tif (this._Settings.DebugLogNoisy) this.log.warning('Attempted to add DUPLICATE value ['+pValue+'] to set ['+pSetName+'] but value is already in set.');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._Settings.DebugLog) this.log.info('Adding value ['+pValue+'] to set ['+pSetName+'].');\n\t\tthis.Sets[pSetName][pValue] = {};\n\t}\n\n\taddSetConnection(pSetName, pValue, pConnectedSet)\n\t{\n\t\tthis.addSetValue(pSetName, pValue);\n\n\t\tif (this.Sets[pSetName][pValue].hasOwnProperty(pConnectedSet))\n\t\t{\n\t\t\tif (this._Settings.DebugLogNoisy) this.log.info('Set ['+pSetName+']->['+pValue+'] already connected to set ['+pConnectedSet+'].');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._Settings.DebugLog) this.log.info('Connecting Set ['+pSetName+']->['+pValue+'] to set ['+pConnectedSet+'].');\n\t\tthis.Sets[pSetName][pValue][pConnectedSet] = {};\n\t}\n\n\tconnectSetValue(pLeftSetName, pLeftValue, pRightSetName, pRightValue)\n\t{\n\t\tthis.addSet(pLeftSetName);\n\t\tthis.addSet(pRightSetName);\n\t\tthis.addSetValue(pLeftSetName, pLeftValue);\n\t\tthis.addSetValue(pRightSetName, pRightValue);\n\t\tthis.addSetConnection(pLeftSetName, pLeftValue, pRightSetName);\n\n\t\tthis.Sets[pLeftSetName][pLeftValue][pRightSetName][pRightValue] = true;\n\t}\n\n\taddSetValueConnection(pLeftSetName, pLeftValue, pRightSetName, pRightValue)\n\t{\n\t\tthis.addSet(pLeftSetName);\n\t\tthis.addSet(pRightSetName);\n\n\t\tthis.addSetValue(pLeftSetName, pLeftValue);\n\t\tthis.addSetValue(pRightSetName, pRightValue);\n\n\t\tthis.connectSetValue(pLeftSetName, pLeftValue, pRightSetName, pRightValue);\n\t}\n\n\taddSetValueConnectionBidirectional(pLeftSetName, pLeftValue, pRightSetName, pRightValue)\n\t{\n\t\tthis.addSetValueConnection(pLeftSetName, pLeftValue, pRightSetName, pRightValue);\n\t\tthis.addSetValueConnection(pRightSetName, pRightValue, pLeftSetName, pLeftValue);\n\t}\n\n\tgetSetValues(pLeftSetName)\n\t{\n\t\t// If the set doesn't exist, return empty\n\t\tif (!this.Sets.hasOwnProperty(pLeftSetName))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.keys(this.Sets[pLeftSetName]);\n\t}\n\n\tgetSetConnectedValues(pLeftSetName, pLeftValue, pRightSetName)\n\t{\n\t\t// If the set doesn't exist, return empty\n\t\tif (!this.Sets.hasOwnProperty(pLeftSetName))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\t// If this value isn't in the set return empty.\n\t\tif (!this.Sets[pLeftSetName].hasOwnProperty(pLeftValue))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\t// If this value isn't connected to the right set return empty.\n\t\tif (!this.Sets[pLeftSetName][pLeftValue].hasOwnProperty(pRightSetName))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.keys(this.Sets[pLeftSetName][pLeftValue][pRightSetName]);\n\t}\n\n\tcheckSetValue(pLeftSetName, pLeftValue)\n\t{\n\t\tif (!this.Sets.hasOwnProperty(pLeftSetName))\n\t\t\treturn false;\n\t\treturn this.Sets[pLeftSetName].hasOwnProperty(pLeftValue);\n\t}\n\n\tcheckSetConnectedValue(pLeftSetName, pLeftValue, pRightSetName, pRightSetValue)\n\t{\n\t\t// If the set doesn't exist, return false\n\t\tif (!this.Sets.hasOwnProperty(pLeftSetName))\n\t\t\treturn false;\n\t\t// If this value isn't in the set return false.\n\t\tif (!this.Sets[pLeftSetName].hasOwnProperty(pLeftValue))\n\t\t\treturn false;\n\t\t// If this value isn't connected to the right set return false.\n\t\tif (!this.Sets[pLeftSetName][pLeftValue].hasOwnProperty(pRightSetName))\n\t\t\treturn false;\n\t\treturn this.Sets[pLeftSetName][pLeftValue][pRightSetName].hasOwnProperty(pRightSetValue);\n\t}\n};\n\nmodule.exports = Constraintify;"]}